{
  "openapi": "3.0.3",
  "info": {
    "title": "Forum API",
    "description": "API documentation for a forum with multiple boards, posts, and comments, using JWT for authentication.",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://redocly.github.io/openapi-template/logo.png"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User operations"
    },
    {
      "name": "Boards",
      "description": "Board operations"
    },
    {
      "name": "Posts",
      "description": "Post operations"
    },
    {
      "name": "Comments",
      "description": "Comment operations"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "operationId": "GetUsers",
        "tags": [
          "Users"
        ],
        "x-handler-group": "users",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageRequest"
          },
          {
            "$ref": "#/components/parameters/SearchWithSort"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PageResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "x-handler-group": "users",
        "summary": "Create a new user",
        "operationId": "CreateUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "x-handler-group": "users",
        "summary": "Get a user by ID",
        "operationId": "GetUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "x-handler-group": "users",
        "summary": "Update a user by ID",
        "operationId": "UpdateUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "x-handler-group": "users",
        "summary": "Delete a user by ID",
        "operationId": "DeleteUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "x-handler-group": "boards",
        "summary": "Get all boards",
        "operationId": "GetBoards",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of boards",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PageResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Board"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Boards"
        ],
        "x-handler-group": "boards",
        "summary": "Create a new board",
        "operationId": "CreateBoard",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/boards/{boardId}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "x-handler-group": "boards",
        "summary": "Get a board by ID",
        "operationId": "GetBoard",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Boards"
        ],
        "x-handler-group": "boards",
        "summary": "Update a board by ID",
        "operationId": "UpdateBoard",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "x-handler-group": "boards",
        "summary": "Delete a board by ID",
        "operationId": "DeleteBoard",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Board deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/boards/{boardId}/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "x-handler-group": "posts",
        "summary": "Get all posts in a board",
        "operationId": "GetBoardPosts",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageRequest"
          },
          {
            "$ref": "#/components/parameters/SearchWithSort"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PageResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "x-handler-group": "posts",
        "summary": "Create a new post in a board",
        "operationId": "CreateBoardPost",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "x-handler-group": "posts",
        "summary": "Get a post by ID",
        "operationId": "GetPost",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "x-handler-group": "posts",
        "summary": "Update a post by ID",
        "operationId": "UpdatePost",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "x-handler-group": "posts",
        "summary": "Delete a post by ID",
        "operationId": "DeletePost",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "x-handler-group": "comments",
        "summary": "Get all comments on a post",
        "operationId": "GetComments",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "x-handler-group": "comments",
        "summary": "Create a new comment on a post",
        "operationId": "CreateComment",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/comments/{commentId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "x-handler-group": "comments",
        "summary": "Get a comment by ID",
        "operationId": "GetComment",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Comments"
        ],
        "x-handler-group": "comments",
        "summary": "Update a comment by ID",
        "operationId": "UpdateComment",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "x-handler-group": "comments",
        "summary": "Delete a comment by ID",
        "operationId": "DeleteComment",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "PageRequest": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "default": 0
          },
          "description": "Page number for pagination"
        },
        {
          "name": "size",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "default": 10
          },
          "description": "Page size for pagination"
        },
        {
          "name": "sort",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": {
            "Sorting criteria in the format": "property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          }
        }
      ],
      "SearchWithSort": [
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search criteria with sort in the format: field:value,field:value;sortField:asc/desc. \nExample: name:john,description:admin;created_at:desc. \nSupports multiple fields and sorting.\n"
        }
      ]
    },
    "schemas": {
      "Sort": {
        "type": "object",
        "description": "정렬 정보를 나타내는 객체입니다.",
        "properties": {
          "sorted": {
            "type": "boolean",
            "description": "정렬 여부를 나타냅니다."
          },
          "unsorted": {
            "type": "boolean",
            "description": "비정렬 여부를 나타냅니다."
          },
          "empty": {
            "type": "boolean",
            "description": "정렬 기준이 비어있는지 여부를 나타냅니다."
          },
          "orders": {
            "type": "array",
            "description": "정렬 기준 목록을 나타냅니다.",
            "items": {
              "type": "object",
              "description": "정렬 기준 객체입니다.",
              "properties": {
                "property": {
                  "type": "string",
                  "description": "정렬할 속성의 이름입니다."
                },
                "direction": {
                  "type": "string",
                  "description": "정렬 방향 (ASC 또는 DESC)을 나타냅니다."
                },
                "ignoreCase": {
                  "type": "boolean",
                  "description": "대소문자를 무시할지 여부를 나타냅니다."
                },
                "nullHandling": {
                  "type": "string",
                  "description": "널 값 처리 방식을 나타냅니다."
                },
                "ascending": {
                  "type": "boolean",
                  "description": "오름차순 정렬 여부를 나타냅니다."
                },
                "descending": {
                  "type": "boolean",
                  "description": "내림차순 정렬 여부를 나타냅니다."
                }
              }
            }
          }
        },
        "required": [
          "sorted",
          "unsorted",
          "empty"
        ]
      },
      "PageResponse": {
        "type": "object",
        "description": "페이지 응답 정보를 나타내는 객체입니다.",
        "properties": {
          "content": {
            "type": "array",
            "description": "현재 페이지의 데이터 목록입니다.",
            "items": {
              "type": "object"
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "총 페이지 수를 나타냅니다."
          },
          "totalElements": {
            "type": "integer",
            "description": "총 데이터 개수를 나타냅니다."
          },
          "number": {
            "type": "integer",
            "description": "현재 페이지 번호를 나타냅니다."
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기를 나타냅니다."
          },
          "numberOfElements": {
            "type": "integer",
            "description": "현재 페이지의 데이터 개수를 나타냅니다."
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지 여부를 나타냅니다."
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지 여부를 나타냅니다."
          },
          "empty": {
            "type": "boolean",
            "description": "페이지가 비어있는지 여부를 나타냅니다."
          },
          "sort": {
            "$ref": "#/components/schemas/Sort",
            "description": "정렬 정보를 나타냅니다."
          }
        },
        "required": [
          "content",
          "totalPages",
          "totalElements",
          "number",
          "size",
          "numberOfElements",
          "first",
          "last",
          "empty",
          "sort"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "사용자의 고유 식별자"
          },
          "username": {
            "type": "string",
            "description": "사용자의 이름"
          },
          "email": {
            "type": "string",
            "description": "사용자의 이메일주소"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "사용자가 생성된 날짜와 시간"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "사용자가 마지막으로 업데이트된 날짜와 시간"
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "새로운 사용자의 사용자명"
          },
          "email": {
            "type": "string",
            "description": "새로운 사용자의 이메일 주소"
          },
          "password": {
            "type": "string",
            "description": "새로운 사용자의 비밀번호"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "사용자의 새로운 사용자명"
          },
          "email": {
            "type": "string",
            "description": "사용자의 새로운 이메일 주소"
          }
        }
      },
      "Board": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "게시판을 위한 고유 식별자"
          },
          "name": {
            "type": "string",
            "description": "게시판의 이름"
          },
          "description": {
            "type": "string",
            "description": "게시판의 설명"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "게시판이 생성된 날짜와 시간"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "게시판이 마지막으로 업데이트된 날짜와 시간"
          }
        }
      },
      "BoardCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "새로운 게시판의 이름"
          },
          "description": {
            "type": "string",
            "description": "새로운 게시판의 설명"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "게시판의 새로운 이름"
          },
          "description": {
            "type": "string",
            "description": "게시판의 새로운 설명"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "게시글을 위한 고유 식별자"
          },
          "board_id": {
            "type": "integer",
            "description": "게시글이 속한 게시판의 식별자"
          },
          "user_id": {
            "type": "integer",
            "description": "게시글을 작성한 사용자의 식별자"
          },
          "title": {
            "type": "string",
            "description": "게시글의 제목"
          },
          "content": {
            "type": "string",
            "description": "게시글의 내용"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "게시글이 생성된 날짜와 시간"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "게시글이 마지막으로 업데이트된 날짜와 시간"
          }
        }
      },
      "PostCreate": {
        "type": "object",
        "properties": {
          "board_id": {
            "type": "integer",
            "description": "게시글이 생성될 게시판의 식별자"
          },
          "title": {
            "type": "string",
            "description": "새로운 게시글의 제목"
          },
          "content": {
            "type": "string",
            "description": "새로운 게시글의 내용"
          }
        },
        "required": [
          "board_id",
          "title",
          "content"
        ]
      },
      "PostUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "게시글의 새로운 제목"
          },
          "content": {
            "type": "string",
            "description": "게시글의 새로운 내용"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "댓글을 위한 고유 식별자"
          },
          "post_id": {
            "type": "integer",
            "description": "댓글이 속한 게시글의 식별자"
          },
          "user_id": {
            "type": "integer",
            "description": "댓글을 작성한 사용자의 식별자"
          },
          "content": {
            "type": "string",
            "description": "댓글의 내용"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "댓글이 생성된 날짜와 시간"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "댓글이 마지막으로 업데이트된 날짜와 시간"
          }
        }
      },
      "CommentCreate": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "integer",
            "description": "댓글이 작성될 게시글의 식별자"
          },
          "content": {
            "type": "string",
            "description": "새로운 댓글의 내용"
          }
        },
        "required": [
          "post_id",
          "content"
        ]
      },
      "CommentUpdate": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "댓글의 새로운 내용"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}